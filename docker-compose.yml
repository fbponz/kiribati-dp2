version: "3"

services: 
      
  # Apache NiFi: Data Ingestion Tool
  nifi:
    image: 'apache/nifi:latest'
    hostname: nifi
    container_name: nifiDP2
    ports:
      - '8090:8090'
    environment:
      - NIFI_WEB_HTTP_PORT=8090
      
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.0
    hostname: zookeeper
    container_name: zookeeperDP2
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:5.4.0
    hostname: broker
    container_name: brokerDP2
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  postgres:
    container_name: postgresDP2
    build: 
      context: ./bd
      dockerfile: Dockerfile
    image: kiribati_db_dp2:1.0
    environment:
      POSTGRES_DB: kiritweet
      POSTGRES_USER: kiriuser
      POSTGRES_PASSWORD: kiripass
    ports:
      - "5432:5432"
    restart: unless-stopped

  clientes:
    container_name: clientesDP2
    build:
      context: ./clientes
      dockerfile: Dockerfile
    depends_on:
      - postgres
    restart: unless-stopped


  casas:
    container_name: casasDP2
    build:
      context: ./casas
      dockerfile: Dockerfile
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
    postgres_data: 